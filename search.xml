<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/posts/0.html"/>
      <url>/posts/0.html</url>
      
        <content type="html"><![CDATA[<p><img src="D:%5CMyBlog%5Cthemes%5Cbutterfly%5Csource%5Cimg%5Cpicture%5C%E5%91%BD%E8%BF%90%E7%9F%B3%E4%B9%8B%E9%97%A81.jpg" alt=""></p><h3 id="前言"><a class="markdownIt-Anchor" href="#前言">#</a> 前言:</h3><p>​最近写了学校的小学期，算是第一个项目，用的老技术，就不详细说明了，jsp+Servlet+Mysql 写的一个管理系统，前端套用的 bootstrap，只有增删查改。</p><p>就说一下其中有意思的地方，哦不，我觉得挺难的地方</p><h3 id="数据如何打印在页面上以及使用bootstrap进行数据回填"><a class="markdownIt-Anchor" href="#数据如何打印在页面上以及使用bootstrap进行数据回填">#</a> 数据如何打印在页面上以及使用 bootstrap 进行数据回填</h3><p>​</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">String method=req.getParameter(<span class="string">&quot;method&quot;</span>);</span><br><span class="line">            <span class="keyword">switch</span> (method)&#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;list&quot;</span>:</span><br><span class="line">                    req.setAttribute(<span class="string">&quot;list&quot;</span>,<span class="built_in">this</span>.buildingInfoService.list());</span><br><span class="line">                    req.getRequestDispatcher(<span class="string">&quot;house_list.jsp&quot;</span>).forward(req,resp);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br></pre></td></tr></table></figure><p>​从前端页面获取到 list 属性，会进入到第一个分支，此时将服务层接收到的 List 对象，绑定到 list 属性上，再转发到 <code>house_list</code>  页面</p><p>​关键的来啦！</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;tbody&gt;</span><br><span class="line">                &lt;c:forEach items=<span class="string">&quot;$&#123;list&#125;&quot;</span> <span class="keyword">var</span>=<span class="string">&quot;buildingInfo&quot;</span>&gt;</span><br><span class="line">                    &lt;tr&gt;</span><br><span class="line">                        &lt;td&gt;$&#123;buildingInfo.id&#125;&lt;/td&gt;</span><br><span class="line">                        &lt;td&gt;$&#123;buildingInfo.buildingLocation&#125;&lt;/td&gt;</span><br><span class="line">                        &lt;td&gt;$&#123;buildingInfo.buildingName&#125;&lt;/td&gt;</span><br><span class="line">                        &lt;td&gt;$&#123;buildingInfo.buildingStructure&#125;&lt;/td&gt;</span><br><span class="line">                        &lt;td&gt;$&#123;buildingInfo.buildingTerm&#125;&lt;/td&gt;</span><br><span class="line">                        &lt;td&gt;$&#123;buildingInfo.buildingType&#125;&lt;/td&gt;</span><br><span class="line">                        &lt;td&gt;&lt;button type=<span class="string">&quot;button&quot;</span> class=<span class="string">&quot;btn btn-info&quot;</span></span><br><span class="line">                                    data-Id=<span class="string">&quot;$&#123;buildingInfo.id&#125;&quot;</span></span><br><span class="line">                                    data-Location=<span class="string">&quot;$&#123;buildingInfo.buildingLocation&#125;&quot;</span></span><br><span class="line">                                    data-Name=<span class="string">&quot;$&#123;buildingInfo.buildingName&#125;&quot;</span></span><br><span class="line">                                    data-Structure=<span class="string">&quot;$&#123;buildingInfo.buildingStructure&#125;&quot;</span></span><br><span class="line">                                    data-Term=<span class="string">&quot;$&#123;buildingInfo.buildingTerm&#125;&quot;</span></span><br><span class="line">                                    data-Type=<span class="string">&quot;$&#123;buildingInfo.buildingType&#125;&quot;</span></span><br><span class="line">                                    data-toggle=<span class="string">&quot;modal&quot;</span> data-target=<span class="string">&quot;#updateUserModal&quot;</span>&gt;修改&lt;/button&gt;</span><br><span class="line">                            &lt;button type=<span class="string">&quot;button&quot;</span> class=<span class="string">&quot;btn btn-danger&quot;</span></span><br><span class="line">                                             data-Id=<span class="string">&quot;$&#123;buildingInfo.id&#125;&quot;</span></span><br><span class="line">                                             data-toggle=<span class="string">&quot;modal&quot;</span></span><br><span class="line">                        data-target=<span class="string">&quot;#deleteModal&quot;</span>&gt;删除&lt;/button&gt;&lt;/td&gt;</span><br><span class="line"></span><br><span class="line">                    &lt;/tr&gt;</span><br><span class="line">                &lt;/c:forEach&gt;</span><br><span class="line">             &lt;/tbody&gt;</span><br></pre></td></tr></table></figure><p>​先解释一下这个 <code>&lt;c:forEach&gt;</code>  是 JSP 标准标签库（JSTL）中的一个标签，用于迭代集合（如数组、List、Set）或枚举类型中的数据。然后 <code>items</code>  指定了迭代的对象 ，新定义一个 <code>buildingInfo</code>  变量，用来访问各个值，然后包裹在 <code>&lt;td&gt;</code>  标签中。就可以打印在页面上了。</p><p>​接下来说一下如何使用 bootstrap 进行数据回填，利用 <code>data-xxx</code>  这个属性可以保存当前接收到的值如第一个 id 值 <code>data-Id=&quot;$&#123;buildingInfo.id&#125;&quot;</code> , 接下来这两个属性 <code>data-toggle=&quot;modal&quot; data-target=&quot;#updateUserModal&quot;</code>  前者通常是放到按钮上，或者链接住，点击就会出现模态框，而后者则是指定是哪个模态框。</p><p>​下面是点击链接或者按钮发生的事</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    $(<span class="string">&#x27;#updateUserModal&#x27;</span>).<span class="title function_">on</span>(<span class="string">&#x27;show.bs.modal&#x27;</span>,<span class="keyword">function</span> (<span class="params">event</span>) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> button=$(event.<span class="property">relatedTarget</span>)</span><br><span class="line">        <span class="keyword">var</span> id=button.<span class="title function_">data</span>(<span class="string">&#x27;id&#x27;</span>)</span><br><span class="line">        <span class="keyword">var</span> location=button.<span class="title function_">data</span>(<span class="string">&#x27;location&#x27;</span>)</span><br><span class="line">        <span class="keyword">var</span> name=button.<span class="title function_">data</span>(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">        <span class="keyword">var</span> structure=button.<span class="title function_">data</span>(<span class="string">&#x27;structure&#x27;</span>)</span><br><span class="line">        <span class="keyword">var</span> term=button.<span class="title function_">data</span>(<span class="string">&#x27;term&#x27;</span>)</span><br><span class="line">        <span class="keyword">var</span> type=button.<span class="title function_">data</span>(<span class="string">&#x27;type&#x27;</span>)</span><br><span class="line">        <span class="keyword">var</span> modal=$(<span class="variable language_">this</span>)</span><br><span class="line"></span><br><span class="line">        modal.<span class="title function_">find</span>(<span class="string">&#x27;#id1&#x27;</span>).<span class="title function_">val</span>(id)</span><br><span class="line">        modal.<span class="title function_">find</span>(<span class="string">&#x27;#blocation2&#x27;</span>).<span class="title function_">val</span>(location)</span><br><span class="line">        modal.<span class="title function_">find</span>(<span class="string">&#x27;#bname2&#x27;</span>).<span class="title function_">val</span>(name)</span><br><span class="line">        modal.<span class="title function_">find</span>(<span class="string">&#x27;#bstructure2&#x27;</span>).<span class="title function_">val</span>(structure)</span><br><span class="line">        modal.<span class="title function_">find</span>(<span class="string">&#x27;#bterm2&#x27;</span>).<span class="title function_">val</span>(term)</span><br><span class="line">        modal.<span class="title function_">find</span>(<span class="string">&#x27;#btype2&#x27;</span>).<span class="title function_">val</span>(type)</span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>​第一行代码监听 ID 为 <code>updateUserModal</code>  的模态框的 <code>show.bs.modal</code>  事件。当这个模态框即将显示时，通过 <code>event.relatedTarget</code>  属性，可以获取触发模态框显示的元素（例如，前面提到的带有 <code>data-toggle=&quot;modal&quot;</code>  属性的按钮）。</p><p>​接收 data 属性保存的数据保存在临时变量中，使用 jQuery 的 <code>data()</code>  方法从触发元素中获取 <code>data-*</code>  属性。</p><p>​通过 <code>$(this)</code>  获取当前模态框的 jQuery 对象。接着，使用 <code>find()</code>  方法找到模态框内部的特定元素（通过 ID 选择器，例如 <code>&lt;input type=&quot;text&quot; id=&quot;id1&quot; name=&quot;id&quot;  class=&quot;ui_input_txt01&quot; readonly /&gt;</code> ），并使用 <code>val()</code>  方法设置这些元素的值，将值回填进数据框中。</p>]]></content>
      
      
      <categories>
          
          <category> JavaWeb项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Servlet </tag>
            
            <tag> JSP </tag>
            
            <tag> JavaScript </tag>
            
            <tag> Java </tag>
            
            <tag> bootstrap </tag>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一篇文章</title>
      <link href="/posts/4a17b156.html"/>
      <url>/posts/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start">#</a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post">#</a> Create a new post</h3><figure class="highlight bash"><figcaption data-lang="bash"><span>h</span></figcaption><table><tr><td data-num="1"></td><td><pre>$ hexo new <span class="token string">"My New Post"</span></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server">#</a> Run server</h3><figure class="highlight bash"><figcaption data-lang="bash"><span>h</span></figcaption><table><tr><td data-num="1"></td><td><pre>$ hexo server</pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files">#</a> Generate static files</h3><figure class="highlight bash"><figcaption data-lang="bash"><span>h</span></figcaption><table><tr><td data-num="1"></td><td><pre>$ hexo generate</pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites">#</a> Deploy to remote sites</h3><figure class="highlight bash"><figcaption data-lang="bash"><span>h</span></figcaption><table><tr><td data-num="1"></td><td><pre>$ hexo deploy</pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 杂项 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
